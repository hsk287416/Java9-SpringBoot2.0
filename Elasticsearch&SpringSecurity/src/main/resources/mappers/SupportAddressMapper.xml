<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.hsk.xunwu.dao.SupportAddressMapper">
  <resultMap id="BaseResultMap" type="com.spring.hsk.xunwu.pojo.SupportAddress">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="belong_to" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="en_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="cn_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="baidu_map_lng" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="baidu_map_lat" javaType="java.lang.Double" jdbcType="DOUBLE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, belong_to, en_name, cn_name, level, baidu_map_lng, baidu_map_lat
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from support_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from support_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.spring.hsk.xunwu.pojo.SupportAddress">
    insert into support_address (id, belong_to, en_name, 
      cn_name, level, baidu_map_lng, 
      baidu_map_lat)
    values (#{id,jdbcType=INTEGER}, #{belongTo,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, 
      #{cnName,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{baiduMapLng,jdbcType=DOUBLE}, 
      #{baiduMapLat,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.spring.hsk.xunwu.pojo.SupportAddress">
    insert into support_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="belongTo != null">
        belong_to,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="baiduMapLng != null">
        baidu_map_lng,
      </if>
      <if test="baiduMapLat != null">
        baidu_map_lat,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="belongTo != null">
        #{belongTo,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="baiduMapLng != null">
        #{baiduMapLng,jdbcType=DOUBLE},
      </if>
      <if test="baiduMapLat != null">
        #{baiduMapLat,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.spring.hsk.xunwu.pojo.SupportAddress">
    update support_address
    <set>
      <if test="belongTo != null">
        belong_to = #{belongTo,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="baiduMapLng != null">
        baidu_map_lng = #{baiduMapLng,jdbcType=DOUBLE},
      </if>
      <if test="baiduMapLat != null">
        baidu_map_lat = #{baiduMapLat,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.spring.hsk.xunwu.pojo.SupportAddress">
    update support_address
    set belong_to = #{belongTo,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      cn_name = #{cnName,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      baidu_map_lng = #{baiduMapLng,jdbcType=DOUBLE},
      baidu_map_lat = #{baiduMapLat,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>